//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace allForms.Summator {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Summator.ISummator")]
    public interface ISummator {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISummator/AddToDb", ReplyAction="http://tempuri.org/ISummator/AddToDbResponse")]
        int AddToDb(string login, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISummator/AddToDb", ReplyAction="http://tempuri.org/ISummator/AddToDbResponse")]
        System.Threading.Tasks.Task<int> AddToDbAsync(string login, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISummator/CheckUser", ReplyAction="http://tempuri.org/ISummator/CheckUserResponse")]
        int CheckUser(string login, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISummator/CheckUser", ReplyAction="http://tempuri.org/ISummator/CheckUserResponse")]
        System.Threading.Tasks.Task<int> CheckUserAsync(string login, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISummator/GetUserId", ReplyAction="http://tempuri.org/ISummator/GetUserIdResponse")]
        System.Data.DataTable GetUserId(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISummator/GetUserId", ReplyAction="http://tempuri.org/ISummator/GetUserIdResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetUserIdAsync(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISummator/CheckNote", ReplyAction="http://tempuri.org/ISummator/CheckNoteResponse")]
        int CheckNote(int note_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISummator/CheckNote", ReplyAction="http://tempuri.org/ISummator/CheckNoteResponse")]
        System.Threading.Tasks.Task<int> CheckNoteAsync(int note_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISummator/Select", ReplyAction="http://tempuri.org/ISummator/SelectResponse")]
        System.Data.DataTable Select(int owner_id, System.DateTime dateStr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISummator/Select", ReplyAction="http://tempuri.org/ISummator/SelectResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> SelectAsync(int owner_id, System.DateTime dateStr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISummator/SearchWord", ReplyAction="http://tempuri.org/ISummator/SearchWordResponse")]
        System.Data.DataTable SearchWord(int owner_id, string word);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISummator/SearchWord", ReplyAction="http://tempuri.org/ISummator/SearchWordResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> SearchWordAsync(int owner_id, string word);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISummator/SelectNote", ReplyAction="http://tempuri.org/ISummator/SelectNoteResponse")]
        System.Data.DataTable SelectNote(int owner_id, string dateStr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISummator/SelectNote", ReplyAction="http://tempuri.org/ISummator/SelectNoteResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> SelectNoteAsync(int owner_id, string dateStr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISummator/DeleteNote", ReplyAction="http://tempuri.org/ISummator/DeleteNoteResponse")]
        int DeleteNote(int noteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISummator/DeleteNote", ReplyAction="http://tempuri.org/ISummator/DeleteNoteResponse")]
        System.Threading.Tasks.Task<int> DeleteNoteAsync(int noteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISummator/InsertNote", ReplyAction="http://tempuri.org/ISummator/InsertNoteResponse")]
        int InsertNote(int ownerId, string title, string note, string date, string color);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISummator/InsertNote", ReplyAction="http://tempuri.org/ISummator/InsertNoteResponse")]
        System.Threading.Tasks.Task<int> InsertNoteAsync(int ownerId, string title, string note, string date, string color);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISummator/UpdateNote", ReplyAction="http://tempuri.org/ISummator/UpdateNoteResponse")]
        int UpdateNote(int noteId, string title, string note, string date, string color);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISummator/UpdateNote", ReplyAction="http://tempuri.org/ISummator/UpdateNoteResponse")]
        System.Threading.Tasks.Task<int> UpdateNoteAsync(int noteId, string title, string note, string date, string color);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISummator/allDateUser", ReplyAction="http://tempuri.org/ISummator/allDateUserResponse")]
        System.Data.DataTable allDateUser(int owner_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISummator/allDateUser", ReplyAction="http://tempuri.org/ISummator/allDateUserResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> allDateUserAsync(int owner_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISummator/GetAllUserHolidays", ReplyAction="http://tempuri.org/ISummator/GetAllUserHolidaysResponse")]
        System.Data.DataTable GetAllUserHolidays(int owner_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISummator/GetAllUserHolidays", ReplyAction="http://tempuri.org/ISummator/GetAllUserHolidaysResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetAllUserHolidaysAsync(int owner_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISummator/InsertHoliday", ReplyAction="http://tempuri.org/ISummator/InsertHolidayResponse")]
        int InsertHoliday(int ownerId, string date, string holidayNote);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISummator/InsertHoliday", ReplyAction="http://tempuri.org/ISummator/InsertHolidayResponse")]
        System.Threading.Tasks.Task<int> InsertHolidayAsync(int ownerId, string date, string holidayNote);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISummator/UpdateHoliday", ReplyAction="http://tempuri.org/ISummator/UpdateHolidayResponse")]
        int UpdateHoliday(int holidayId, int ownerId, string dateHoliday, string holidayNote);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISummator/UpdateHoliday", ReplyAction="http://tempuri.org/ISummator/UpdateHolidayResponse")]
        System.Threading.Tasks.Task<int> UpdateHolidayAsync(int holidayId, int ownerId, string dateHoliday, string holidayNote);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISummatorChannel : allForms.Summator.ISummator, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SummatorClient : System.ServiceModel.ClientBase<allForms.Summator.ISummator>, allForms.Summator.ISummator {
        
        public SummatorClient() {
        }
        
        public SummatorClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SummatorClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SummatorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SummatorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int AddToDb(string login, string pass) {
            return base.Channel.AddToDb(login, pass);
        }
        
        public System.Threading.Tasks.Task<int> AddToDbAsync(string login, string pass) {
            return base.Channel.AddToDbAsync(login, pass);
        }
        
        public int CheckUser(string login, string pass) {
            return base.Channel.CheckUser(login, pass);
        }
        
        public System.Threading.Tasks.Task<int> CheckUserAsync(string login, string pass) {
            return base.Channel.CheckUserAsync(login, pass);
        }
        
        public System.Data.DataTable GetUserId(string login, string password) {
            return base.Channel.GetUserId(login, password);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetUserIdAsync(string login, string password) {
            return base.Channel.GetUserIdAsync(login, password);
        }
        
        public int CheckNote(int note_id) {
            return base.Channel.CheckNote(note_id);
        }
        
        public System.Threading.Tasks.Task<int> CheckNoteAsync(int note_id) {
            return base.Channel.CheckNoteAsync(note_id);
        }
        
        public System.Data.DataTable Select(int owner_id, System.DateTime dateStr) {
            return base.Channel.Select(owner_id, dateStr);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> SelectAsync(int owner_id, System.DateTime dateStr) {
            return base.Channel.SelectAsync(owner_id, dateStr);
        }
        
        public System.Data.DataTable SearchWord(int owner_id, string word) {
            return base.Channel.SearchWord(owner_id, word);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> SearchWordAsync(int owner_id, string word) {
            return base.Channel.SearchWordAsync(owner_id, word);
        }
        
        public System.Data.DataTable SelectNote(int owner_id, string dateStr) {
            return base.Channel.SelectNote(owner_id, dateStr);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> SelectNoteAsync(int owner_id, string dateStr) {
            return base.Channel.SelectNoteAsync(owner_id, dateStr);
        }
        
        public int DeleteNote(int noteId) {
            return base.Channel.DeleteNote(noteId);
        }
        
        public System.Threading.Tasks.Task<int> DeleteNoteAsync(int noteId) {
            return base.Channel.DeleteNoteAsync(noteId);
        }
        
        public int InsertNote(int ownerId, string title, string note, string date, string color) {
            return base.Channel.InsertNote(ownerId, title, note, date, color);
        }
        
        public System.Threading.Tasks.Task<int> InsertNoteAsync(int ownerId, string title, string note, string date, string color) {
            return base.Channel.InsertNoteAsync(ownerId, title, note, date, color);
        }
        
        public int UpdateNote(int noteId, string title, string note, string date, string color) {
            return base.Channel.UpdateNote(noteId, title, note, date, color);
        }
        
        public System.Threading.Tasks.Task<int> UpdateNoteAsync(int noteId, string title, string note, string date, string color) {
            return base.Channel.UpdateNoteAsync(noteId, title, note, date, color);
        }
        
        public System.Data.DataTable allDateUser(int owner_id) {
            return base.Channel.allDateUser(owner_id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> allDateUserAsync(int owner_id) {
            return base.Channel.allDateUserAsync(owner_id);
        }
        
        public System.Data.DataTable GetAllUserHolidays(int owner_id) {
            return base.Channel.GetAllUserHolidays(owner_id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetAllUserHolidaysAsync(int owner_id) {
            return base.Channel.GetAllUserHolidaysAsync(owner_id);
        }
        
        public int InsertHoliday(int ownerId, string date, string holidayNote) {
            return base.Channel.InsertHoliday(ownerId, date, holidayNote);
        }
        
        public System.Threading.Tasks.Task<int> InsertHolidayAsync(int ownerId, string date, string holidayNote) {
            return base.Channel.InsertHolidayAsync(ownerId, date, holidayNote);
        }
        
        public int UpdateHoliday(int holidayId, int ownerId, string dateHoliday, string holidayNote) {
            return base.Channel.UpdateHoliday(holidayId, ownerId, dateHoliday, holidayNote);
        }
        
        public System.Threading.Tasks.Task<int> UpdateHolidayAsync(int holidayId, int ownerId, string dateHoliday, string holidayNote) {
            return base.Channel.UpdateHolidayAsync(holidayId, ownerId, dateHoliday, holidayNote);
        }
    }
}
